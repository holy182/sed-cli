name: SED CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Build application
      run: npm run build
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
    
    - name: Test CLI help
      run: |
        echo "Testing SED CLI help command..."
        node dist/cli.js --help
    
    - name: Test CLI version
      run: |
        echo "Testing SED CLI version..."
        node dist/cli.js --version

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Run SED security check
      run: npm run security:check

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Test CLI commands
      run: |
        echo "Testing available CLI commands..."
        node dist/cli.js init --help
        node dist/cli.js build --help
        node dist/cli.js validate --help
        node dist/cli.js status --help

  semantic-layer-sync:
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Test semantic layer commands
      run: |
        echo "Testing semantic layer commands..."
        node dist/cli.js context --help
        node dist/cli.js export --help
        node dist/cli.js import --help

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security, build, semantic-layer-sync]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "This would deploy your SED application to staging"
        echo "Add your actual deployment logic here"

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security, build, semantic-layer-sync]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "This would deploy your SED application to production"
        echo "Add your actual deployment logic here"

  notify:
    runs-on: ubuntu-latest
    needs: [test, security, build, semantic-layer-sync]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.test.result == 'success' && needs.security.result == 'success' && needs.build.result == 'success'
      run: |
        echo "✅ SED CI/CD Pipeline completed successfully!"
        echo "All tests passed, security checks cleared, and build completed."
        echo "Your semantic layer is ready for deployment."
    
    - name: Notify on failure
      if: needs.test.result == 'failure' || needs.security.result == 'failure' || needs.build.result == 'failure'
      run: |
        echo "❌ SED CI/CD Pipeline failed!"
        echo "Check the logs above for details on what went wrong."
        echo "Common issues:"
        echo "- Test failures in the test job"
        echo "- Security vulnerabilities in dependencies"
        echo "- Build compilation errors"
        exit 1 